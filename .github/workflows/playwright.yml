name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # Esecuzione manuale
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run Playwright tests
      run: npm run test
      env:
        # Mock environment variables for testing
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://mock.supabase.co' }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'mock-anon-key' }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'mock-service-key' }}
        NEXT_PUBLIC_APP_URL: http://localhost:3000
        # Mock Stripe keys for testing
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock
        STRIPE_SECRET_KEY: sk_test_mock
        STRIPE_WEBHOOK_SECRET: whsec_mock

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  # Job separato per test su diversi browser
  test-cross-browser:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.project }}

    - name: Build application
      run: npm run build

    - name: Run Playwright tests on ${{ matrix.project }}
      run: npx playwright test --project=${{ matrix.project }}
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://mock.supabase.co' }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'mock-anon-key' }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'mock-service-key' }}
        NEXT_PUBLIC_APP_URL: http://localhost:3000
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock
        STRIPE_SECRET_KEY: sk_test_mock
        STRIPE_WEBHOOK_SECRET: whsec_mock

    - name: Upload Playwright Report (${{ matrix.project }})
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-${{ matrix.project }}
        path: playwright-report/
        retention-days: 30

  # Comment su PR con risultati
  comment-pr:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'pull_request' && !cancelled()
    
    steps:
    - name: Comment PR with test results
      uses: actions/github-script@v7
      with:
        script: |
          const testResult = '${{ needs.test.result }}';
          const emoji = testResult === 'success' ? '‚úÖ' : '‚ùå';
          const status = testResult === 'success' ? 'passati' : 'falliti';
          
          const body = `## ${emoji} Test Playwright ${status}
          
          **Risultati test E2E:**
          - Status: **${testResult}**
          - Browser testati: Chrome, Firefox, Safari
          - Viewport: Desktop + Mobile
          
          üìÅ Report dettagliato disponibile negli artifacts.
          
          ${testResult === 'failure' ? '‚ö†Ô∏è Alcuni test sono falliti. Controlla i logs per maggiori dettagli.' : 'üéâ Tutti i test sono passati!'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

  # Job per test mobile specifici
  test-mobile:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run Mobile tests
      run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://mock.supabase.co' }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'mock-anon-key' }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'mock-service-key' }}
        NEXT_PUBLIC_APP_URL: http://localhost:3000
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock
        STRIPE_SECRET_KEY: sk_test_mock
        STRIPE_WEBHOOK_SECRET: whsec_mock

    - name: Upload Mobile Test Report
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-mobile-report
        path: playwright-report/
        retention-days: 30
